version: '1.0'
name: master-pipeline
displayName: MasterPipeline
triggers:
  trigger: auto
  push:
    branches:
      include:
        - master
stages:
  - name: compile
    displayName: 编译
    strategy: naturally
    trigger: auto
    steps:
      - step: build@maven
        name: build_maven
        displayName: Maven 构建
        jdkVersion: 8
        mavenVersion: 3.3.9
        commands:
          - mvn -B clean package -Dmaven.test.skip=true
        artifacts:
          - name: BUILD_ARTIFACT
            path:
              - ./target
        strategy: {}
      - step: publish@general_artifacts
        name: publish_general_artifacts
        displayName: 上传制品
        dependArtifact: BUILD_ARTIFACT
        artifactName: output
        strategy: {}
        dependsOn: build_maven
  - name: release
    displayName: 发布
    strategy: naturally
    trigger: auto
    steps:
      - step: publish@release_artifacts
        name: publish_release_artifacts
        displayName: 发布
        dependArtifact: output
        version: 1.0.0.0
        autoIncrement: true
        strategy: {}
  - name: stage-ee61ecea
    displayName: 主机部署
    strategy: naturally
    trigger: auto
    executor: []
    steps:
      - step: deploy@agent
        name: deploy_agent
        displayName: 主机部署
        hostGroupID: PROD
        deployArtifact:
          - source: build
            name: output
            target: ~/gitee_go/deploy
            dependArtifact: BUILD_ARTIFACT
        script:
          - '# 功能：部署脚本会在部署主机组的每台机器上执行'
          - '# 使用场景：先将制品包解压缩到指定目录中，再执行启动脚本deploy.sh，脚本示例地址：https://gitee.com/gitee-go/spring-boot-maven-deploy-case/blob/master/deploy.sh'
          - '# mkdir -p /home/admin/app'
          - '# tar zxvf ~/gitee_go/deploy/output.tar.gz -C /home/admin/app'
          - '# sh /home/admin/app/deploy.sh restart'
          - '# 如果你是php之类的无需制品包的制品方式，可以使用 git clone 或者 git pull 将源代码更新到服务器，再执行其他命令'
          - '# git clone ***@***.git'
          - cd ~/gitee_go/deploy
          - tar -zxf output.tar.gz
          - cd target
          - sh /opt/hongyan/stop.sh
          - mv -b -f hongyan-0.0.1-SNAPSHOT.jar /opt/hongyan/hongyan-0.0.1-SNAPSHOT.jar
          - cd /opt/hongyan
          - 'nohup java -jar hongyan-0.0.1-SNAPSHOT.jar & '
          - echo "Deploy Success"
          - sleep 10
          - curl 127.0.0.1:80
        notify: []
        strategy:
          retry: '0'
